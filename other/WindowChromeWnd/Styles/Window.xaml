<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  窗体操作按钮基础样式  -->
    <Style
        x:Key="CaptionButtonStyleKey"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="29" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!--  普通按钮样式  -->
    <Style
        x:Key="GrayCaptionButtonStyleKey"
        BasedOn="{StaticResource CaptionButtonStyleKey}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.0"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.0"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.3"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  关闭按钮样式  -->
    <Style
        x:Key="RedCaptionButtonStyleKey"
        BasedOn="{StaticResource CaptionButtonStyleKey}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.0"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.0"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.3"
                                            Duration="0:0:0.150">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  窗体样式  -->
    <Style
        x:Key="WindowDefaultStyleKey"
        TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!--  CornerRadius必须设置为0，否则在win7上，界面上方两侧外边框无法闭合  -->
                <WindowChrome
                    CornerRadius="0"
                    GlassFrameThickness="-1"
                    ResizeBorderThickness="5"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border
                        x:Name="border"
                        Background="White"
                        BorderBrush="#0078d4"
                        BorderThickness="1"
                        UseLayoutRounding="True">
                        <Grid>
                            <!--  上下区域 上面是非客户区，下面是客户区  -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--  非客户区  -->
                            <!--  非客户区  -->
                            <Grid
                                Grid.Row="0"
                                Background="#0078d4">
                                <!--  左右区域 左边是窗体图标文字 右边是操作按钮最小化、最大化、关闭  -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  图片 标题  -->
                                <StackPanel
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button
                                        Width="16"
                                        Height="16"
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Command="{x:Static SystemCommands.ShowSystemMenuCommand}"
                                        Content="我是图标" />
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        Text="{TemplateBinding Title}" />
                                </StackPanel>

                                <!--  操作按钮  -->
                                <StackPanel
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Orientation="Horizontal"
                                    UseLayoutRounding="True"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button
                                        x:Name="btnMinimizeButton"
                                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                        Style="{StaticResource GrayCaptionButtonStyleKey}">
                                        <Path
                                            Width="10"
                                            Height="10"
                                            Data="M0,4 L10,4 L10,5 L0,5 z"
                                            Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=Button}}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Uniform" />
                                    </Button>
                                    <Button
                                        x:Name="btnMaximizeButton"
                                        Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                        Style="{StaticResource GrayCaptionButtonStyleKey}">
                                        <Path
                                            Width="10"
                                            Height="10"
                                            Data="M1,1 L1,9 L9,9 L9,1 z M0,0 L10,0 L10,10 L0,10 z"
                                            Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=Button}}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Uniform" />
                                    </Button>
                                    <Button
                                        x:Name="btnRestoreButton"
                                        Command="{x:Static SystemCommands.RestoreWindowCommand}"
                                        Style="{StaticResource GrayCaptionButtonStyleKey}"
                                        Visibility="Collapsed">
                                        <Path
                                            Width="10"
                                            Height="10"
                                            Data="M1,3 L1,9 L7,9 L7,3 z M3,1 L3,2 L8,2 L8,7 L9,7 L9,1 z M2,0 L10,0 L10,8 L8,8 L8,10 L0,10 L0,2 L2,2 z"
                                            Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=Button}}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Uniform" />
                                    </Button>
                                    <Button
                                        x:Name="btnCloseButton"
                                        Command="{x:Static SystemCommands.CloseWindowCommand}"
                                        Style="{StaticResource RedCaptionButtonStyleKey}">
                                        <Path
                                            Width="10"
                                            Height="10"
                                            Data="M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z"
                                            Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Uniform" />
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <!--  客户区内容在此  -->
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter ClipToBounds="True" />
                            </AdornerDecorator>
                            <!--  缩放图标（ResizeMode=CanResizeWithGrip && WindowState=Normal）  -->
                            <ResizeGrip
                                x:Name="ResizeGrip"
                                Grid.Row="1"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                IsTabStop="False"
                                Visibility="Collapsed"
                                WindowChrome.ResizeGripDirection="BottomRight" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="btnMaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="btnRestoreButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="btnMaximizeButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="btnRestoreButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="btnMinimizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="btnMaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="btnRestoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="lightGray" />
                        </Trigger>
                        <!--  多条件判断是否显示ResizeGrip  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="8" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>